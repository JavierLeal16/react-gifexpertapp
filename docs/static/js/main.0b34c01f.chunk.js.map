{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cate","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAwBhD,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BC,QAAQC,IAAK,oBACbV,GAAc,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACvCR,EAAc,MAOlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAzBe,SAAAT,GACvBI,QAAQC,IAAIL,EAAEU,OAAOF,OAErBV,EAAcE,EAAEU,OAAOF,a,8BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAWH,GAF9C,8DAIKI,MAAQF,GAJb,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAKtC,OAHAV,QAAQC,IAAI,CAAEkB,KAAIC,QAAOV,QAIrB,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLJO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECAd,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAKZ,CAAEpB,IAIEqB,EDvB0BM,CAAc3B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,wCAEX,qBAAKJ,UAAU,YAAf,SAEOH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAAkBA,GAAlB,IACAkB,IAAQlB,EAAIC,eEqBpBkB,EAnCK,WAAK,MAIc7C,mBAAS,CAAC,gBAJxB,mBAIf8C,EAJe,KAIH/C,EAJG,KActB,OACI,qCACI,mCAAO,eAAP,OACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWrB,KAAK,SAACsB,GAAD,OACZ,cAAC,EAAD,CAEI/B,UAAa+B,GADNA,Y,MCxBnCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0b34c01f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e =>{\r\n        console.log(e.target.value);\r\n\r\n        setInputValue(e.target.value)\r\n        \r\n    })\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n        \r\n            console.log( 'Submit realizado' );\r\n            setCategorias(cate => [ inputValue, ...cate ])\r\n            setInputValue('');\r\n    \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( categoria) =>{\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=5&api_key=vqK0l4lu4cQPEkS2txke4LjprVoiCopL`;\r\n\r\n    const respuesta = await fetch ( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    console.log({ id, title, url});\r\n    \r\n    \r\n    return (\r\n        <div className=\"card\" >\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { /* useState, useEffect */ } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3> { categoria } </h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            {<div className=\"card-grid\" >\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem { ...img }\r\n                        key = { img.id } />\r\n                    )\r\n                }    \r\n               \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs( categoria )\r\n            .then( imgs =>{\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs, \r\n                        loading: false\r\n                    })    \r\n                }, 3000);\r\n\r\n                \r\n\r\n            } )\r\n    }, [ categoria ] )\r\n\r\n    \r\n\r\n    return state;\r\n}","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    // const categorias = ['cosa1', 'cosa2', 'cosa3'];\r\n\r\n    const [categorias, setCategorias] = useState(['Castlevania'])\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     // setCategorias( [...categorias, 'cosa4'] );\r\n    //     setCategorias(cate => [...cate, 'cosa4'])\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2> { 'GifExpertApp' } </h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( (category)=> \r\n                        <GifGrid\r\n                            key= { category }\r\n                            categoria= { category }\r\n                          />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n        \r\n}\r\n   \r\nexport default  GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}